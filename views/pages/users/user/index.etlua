<script>
function user() {return {
    user: {},
    methods: [],
    disabled: {},
    leaderboard_users: [],
    leaderboard_difftables: [],
    pending_count: 0,
    selected_leaderboard_id: 0,
    selected_difftable_id: 0,
    selected_community_id: 0,
    selected_score_id: 0,
    async get() {
		let response = await _get('<%= api_url %>/users/<%= params.user_id %>', {
            methods: true,
            inputmodes: true,
            roles: true,
        })
        if (!response.ok) return
		var response_json = await response.json()
		this.user = response_json.user
		this.methods = response_json.__methods
		this.disabled = response_json.__disabled

        if (Array.isArray(this.methods) && this.methods.includes("PATCH")) {
            response = await _get('<%= api_url %>/users/<%= params.user_id %>/communities', {
                no_data: true,
                invitations: true,
                requests: true,
            })
            if (response.ok) {
                this.pending_count = (await response.json()).filtered
            }
        }

		response = await _get('<%= api_url %>/users/<%= params.user_id %>/leaderboards', {
            leaderboard: true,
        })
        if (!response.ok) return
		this.leaderboard_users = (await response.json()).leaderboard_users

        dtInitUser(this)

        this.getLeaderboardDifftables()
    },
    async getLeaderboardDifftables() {
        if (!this.selected_leaderboard_id) {
            this.leaderboard_difftables = []
            this.selected_difftable_id = null
            this.reloadScoresDt()
            return
        }
		var response = await _get(`<%= api_url %>/leaderboards/${this.selected_leaderboard_id}/difftables`, {
            difftable: true,
        })
        if (!response.ok) return
		this.leaderboard_difftables = (await response.json()).leaderboard_difftables

        this.reloadScoresDt()
    },
    async reloadScoresDt() {
        this.$nextTick(() => {
            this.dtBestScores.ajax.reload(null, false)
            this.dtAllScores.ajax.reload(null, false)
        })
    },
    async leaveSelectedCommunity() {
		await _delete(`<%= api_url %>/communities/${this.selected_community_id}/users/<%= params.user_id %>`)
        this.dtCommunities.ajax.reload()
    },
    async deleteSelectedScore() {
		await _delete(`<%= api_url %>/scores/${this.selected_score_id}`)
        this.reloadScoresDt()
    },
}}
</script>


<div id="user" x-data="user" x-init="get" x-show="user.id" x-cloak>
    <% render("views.components.modals.properties") %>


    <nav id="secondary-navbar">
        <div class="container-lg">
            <div class="nav">
                <a class="nav-link" href="#info-section">Info</a>
                <a class="nav-link" href="#description-section">Description</a>
                <a class="nav-link" href="#communities-leaderboards-section">Communities</a>
                <a class="nav-link" href="#communities-leaderboards-section">Leaderboards</a>
                <a class="nav-link" href="#best-scores-section">Best scores</a>
                <a class="nav-link" href="#all-scores-section">All scores</a>
            </div>
        </div>
    </nav>
    <div id="secondary-navbar-box"></div>

    <div class="banner" :style="`background-image: url(${renderBlurhashBanner(user.banner)})`"></div>

    <main class="container-lg">
        <div id="main-box">
            <nav class="navbar-expand-xl page-icons page-icons-right">
                <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#page-icons-right">
                    <i class="fas fa-ellipsis-v"></i>
                </button>

                <div class="collapse navbar-collapse" id="page-icons-right">
                    <div class="navbar-nav">
                        <a x-show="methods.includes('PATCH')" href="<%= url_for("user.inbox", params) %>" class="page-icon" title="Accept requests and send invites">
                            <span class="page-icon-text">Inbox</span>
                            <div class="page-icon-box">
                                <i class="fas fa-inbox"></i>
                                <template x-if="pending_count > 0">
                                    <div class="new-message-circle" x-text="pending_count"></div>
                                </template>
                            </div>
                        </a>

                        <a x-show="methods.includes('PATCH')" href="<%= url_for("user.edit", params) %>" class="page-icon" title="Your settings">
                            <span class="page-icon-text">Settings</span>
                            <div class="page-icon-box">
                                <i class="fas fa-cog"></i>
                            </div>
                        </a>
                    </div>
                </div>
            </nav>

            <h1 x-html="userLink(user)"></h1>


            <section id="info-section">
                <h2>Info</h2>

                <table class="meta-table">
                    <tr>
                        <th title="Favourite mode">Fav modes:</th>
                        <td x-text="inputmodesToString(user.user_inputmodes)"></td>
                        <th title="Total time of gameplay">Playtime:</th>
                        <td x-text="Math.floor(user.play_time / 3600) + 'h'"></td>
                    </tr>
                    <tr>
                        <th title="Total unique charts played">Charts played:</th>
                        <td x-text="user.notecharts_count"></td>
                        <th title="Total play count">Plays:</th>
                        <td x-text="user.scores_count"></td>
                    </tr>
                    <tr>
                        <th title="The player's Discord tag">Discord:</th>
                        <td x-text="user.discord"></td>
                        <th title="A link to the player's Twitter">Twitter:</th>
                        <td>
                            <a :href="'https://twitter.com/' + user.twitter" x-text="user.twitter"></a>
                        </td>
                    </tr>
                    <tr>
                        <th title="A link to something related to the player">Custom link:</th>
                        <td>
                            <a :href="user.custom_link" x-text="user.custom_link"></a>
                        </td>
                        <th title="Player roles">Roles:</th>
                        <td x-html="rolesToHtml(user.user_roles)"></td>
                    </tr>
                </table>
            </section>


            <section id="description-section">
                <h2>Description</h2>

                <p x-text="user.description"></p>
            </section>


            <% render("views.components.modals.delete", {
                id = "leave-community-modal",
                delete = "leaveSelectedCommunity",
            }) %>
            <% render("views.components.modals.delete", {
                id = "delete-score-modal",
                delete = "deleteSelectedScore",
            }) %>
            <% render("views.components.modals.add-leaderboard") %>
            <% render("views.components.modals.create-leaderboard") %>
            <section id="communities-leaderboards-section" class="section-grid">
                <div class="row">
                    <div class="col-sm-6">
                        <h2>
                            Communities
                            <a href="<%= url_for("communities.create") %>" class="title-icon h2-icon teal teal-h" title="Create community">
                                <i class="fas fa-plus"></i>
                            </a>
                        </h2>

                        <table id="user-communities-table" class="data-table table table-icon-col-first table-icon-col-last" data-orders="0a 1a">
                            <thead>
                                <tr>
                                    <th class="table-icon-th"></th>
                                    <th title="Community name">Name</th>
                                    <th title="To join private communities, you have to send a request">Public</th>
                                    <th title="Input modes in community leaderboards">Modes</th>
                                    <th class="table-icon-th"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>


                    <div class="col-sm-6">
                        <h2>
                            Leaderboards
                            <a href="#!" class="title-icon h2-icon teal teal-h" title="Create leaderboard" data-bs-toggle="modal" data-bs-target="#create-leaderboard-modal">
                                <i class="fas fa-plus"></i>
                            </a>
                        </h2>

                        <table id="user-leaderboards-table" class="data-table table table-icon-col-first table-icon-col-last" data-orders="3a">
                            <thead>
                                <tr>
                                    <th class="table-icon-th"></th>
                                    <th title="Leaderboard name">Name</th>
                                    <th title="Leaderboard input modes">Modes</th>
                                    <th title="Rank of this player in the leaderboard">Rank</th>
                                    <th class="table-icon-th"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </section>


            <section id="best-scores-section">
                <h2>Best scores</h2>

                <div id="best-scores-insert-top" hidden>
                    <div class="col">
                        <form class="table-form table-form-top">
                            <select @change="getLeaderboardDifftables" x-model="selected_leaderboard_id" class="form-select form-select-sm" id="best-scores-leaderboard" name="leaderboard" title="Filter by leaderboard and use leaderboard calculators">
                                <option value="" selected>All leaderboards</option>
                                <template x-for="leaderboard_user in leaderboard_users">
                                    <option :value="leaderboard_user.leaderboard_id" x-text="leaderboard_user.leaderboard.name"></option>
                                </template>
                            </select>
                        </form>
                    </div>

                    <div class="col">
                        <form class="table-form table-form-top">
                            <select @change="reloadScoresDt" x-model="selected_difftable_id" class="form-select form-select-sm" id="best-scores-difftable" name="table" title="Filter by table">
                                <option selected>All tables</option>
                                <template x-for="leaderboard_difftable in leaderboard_difftables">
                                    <option :value="leaderboard_difftable.difftable_id" x-text="leaderboard_difftable.difftable.name"></option>
                                </template>
                            </select>
                        </form>
                    </div>

                    <div class="col">
                        <form class="table-form table-form-top">
                            <div class="form-check form-switch">
                                <label for="show-all-columns" class="form-check-label" title="Show more info about the scores">
                                    <input type="checkbox" class="form-check-input data-table-col-toggle" id="best-scores-show-all-columns" name="show-all-columns" data-table="best-scores-table">
                                    All values
                                </label>
                            </div>
                        </form>
                    </div>
                </div>

                <table id="user-best-scores-table" class="data-table table table-icon-col-last" id="best-scores-table" data-insert-top="best-scores-insert-top" data-toggle-cols="">
                    <thead>
                        <tr>
                            <th class="table-col-minwidth" title="Rank compared to other scores of the player">Rank</th>
                            <th title="Chart title">Title</th>
                            <th title="Chart difficulty">Diff</th>
                            <th title="Chart level">Level</th>
                            <th title="Players chart performance rating">PR</th>
                            <th title="Player accuracy">Acc</th>
                            <th title="Player miss count">Misses</th>
                            <th title="Input mode the score was set with">Mode</th>
                            <th title="All modifiers the score was set with">Mods</th>
                            <th title="Score date and time">Date</th>
                            <th class="table-icon-th"></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr>
                            <th title="Rank compared to other scores of the player">Rank</th>
                            <th title="Chart title">Title</th>
                            <th title="Chart difficulty">Diff</th>
                            <th title="Chart level">Level</th>
                            <th title="Players chart performance rating">PR</th>
                            <th title="Player accuracy">Acc</th>
                            <th title="Player miss count">Misses</th>
                            <th title="Input mode the score was set with">Mode</th>
                            <th title="All modifiers the score was set with">Mods</th>
                            <th title="Score date and time">Date</th>
                            <th class="table-icon-th"></th>
                        </tr>
                    </tfoot>
                </table>
            </section>


            <section id="all-scores-section">
                <h2>All scores</h2>

                <div id="all-scores-insert-top" hidden>
                    <div class="col">
                        <form class="table-form table-form-top">
                            <select @change="getLeaderboardDifftables" x-model="selected_leaderboard_id" class="form-select form-select-sm" id="all-scores-leaderboard" name="leaderboard" title="Filter by leaderboard and use leaderboard calculators">
                                <option value="" selected>All leaderboards</option>
                                <template x-for="leaderboard_user in leaderboard_users">
                                    <option :value="leaderboard_user.leaderboard_id" x-text="leaderboard_user.leaderboard.name"></option>
                                </template>
                            </select>
                        </form>
                    </div>

                    <div class="col">
                        <form class="table-form table-form-top">
                            <select @change="reloadScoresDt" x-model="selected_difftable_id" class="form-select form-select-sm" id="all-scores-difftable" name="table" title="Filter by table">
                                <option selected>All tables</option>
                                <template x-for="leaderboard_difftable in leaderboard_difftables">
                                    <option :value="leaderboard_difftable.difftable_id" x-text="leaderboard_difftable.difftable.name"></option>
                                </template>
                            </select>
                        </form>
                    </div>

                    <div class="col">
                        <form class="table-form table-form-top">
                            <div class="form-check form-switch">
                                <label for="show-all-columns" class="form-check-label" title="Show more info about the scores">
                                    <input type="checkbox" class="form-check-input data-table-col-toggle" id="all-scores-show-all-columns" name="show-all-columns" data-table="all-scores-table">
                                    All values
                                </label>
                            </div>
                        </form>
                    </div>
                </div>

                <table id="user-all-scores-table" class="data-table table table-icon-col-last" id="all-scores-table" data-orders="8d" data-insert-top="all-scores-insert-top" data-toggle-cols="">
                    <thead>
                        <tr>
                            <th title="Chart title">Title</th>
                            <th title="Chart difficulty">Diff</th>
                            <th title="Chart level">Level</th>
                            <th title="Players chart performance rating">PR</th>
                            <th title="Player accuracy">Acc</th>
                            <th title="Player miss count">Misses</th>
                            <th title="Input mode the score was set with">Mode</th>
                            <th title="All modifiers the score was set with">Mods</th>
                            <th title="Score date and time">Date</th>
                            <th class="table-icon-th"></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr>
                            <th title="Chart title">Title</th>
                            <th title="Chart difficulty">Diff</th>
                            <th title="Chart level">Level</th>
                            <th title="Players chart performance rating">PR</th>
                            <th title="Player accuracy">Acc</th>
                            <th title="Player miss count">Misses</th>
                            <th title="Input mode the score was set with">Mode</th>
                            <th title="All modifiers the score was set with">Mods</th>
                            <th title="Score date and time">Date</th>
                            <th class="table-icon-th"></th>
                        </tr>
                    </tfoot>
                </table>
            </section>
        </div>
    </main>
</div>


<script>
function dtInitUser(obj) {
    obj.dtCommunities = dtInit(document.querySelector("#user-communities-table"), {
        ...dtColOptions,
        serverSide: true,
        ajax: {
            url: "/dt/users/<%= params.user_id %>/communities",
            type: "POST",
            data(d) {
                d.community = true
                d.community_inputmodes = true
                d.methods = true
            }
        },
        columns: [
            {
                className: 'table-icon-cell',
                render(data, type, row, meta) {
                    if (row.role == "creator") {
                        return `
                        <span class="table-icon table-icon-s orange" title="The owner of the community">
                            <i class="fas fa-crown"></i>
                        </span>
                        `
                    }
                    return ""
                }
            },
            {render(d, t, row) {return communityLink(row.community)}},
            {render(d, t, row) {return row.community.is_public ? 'Yes' : 'No'}},
            {render(d, t, row) {return inputmodesToString(row.community.community_inputmodes)}},
            {
                className: 'table-icon-row',
                render(data, type, row, meta) {
                    var out = ""
                    if (Array.isArray(row.community.__methods) && row.community.__methods.includes("PATCH")) {
                        out += `
                            <a href="<%= url_for("community.edit", {community_id = "${row.community_id}"}) %>" class="table-icon table-icon-s orange orange-h" title="Edit community">
                                <i class="fas fa-pen"></i>
                            </a>
                        `
                    }
                    if (Array.isArray(row.__methods) && row.__methods.includes("DELETE")) {
                        out += `
                            <a href="#!" class="table-icon red red-h" title="Leave community" data-bs-toggle="modal" data-bs-target="#leave-community-modal" @click="selected_community_id = ${row.community_id}">
                                <i class="fas fa-sign-out-alt"></i>
                            </a>
                        `
                    }
                    return out
                }
            },
        ]
    })
    dtInit(document.querySelector("#user-leaderboards-table"), {
        ...dtColOptions,
        serverSide: true,
        ajax: {
            url: "/dt/users/<%= params.user_id %>/leaderboards",
            type: "POST",
            data(d) {
                d.leaderboard = true
                d.leaderboard_inputmodes = true
                d.methods = true
            }
        },
        columns: [
            {
                className: 'table-icon-cell',
                render(data, type, row, meta) {
                    if (row.role == "creator" || row.role == "admin" || row.role == "moderator") {
                        return `
                            <span class="table-icon table-icon-s orange" title="The owner, an admin or a mod of the community that owns this leaderboard">
                                <i class="fas fa-user-shield"></i>
                            </span>
                        `
                    }
                    return ""
                }
            },
            {render(d, t, row) {return leaderboardLink(row.leaderboard)}},
            {render(d, t, row) {return inputmodesToString(row.leaderboard.leaderboard_inputmodes)}},
            {render(d, t, row) {return '#' + row.rank}},
            {
                className: 'table-icon-row',
                render(data, type, row, meta) {
                    var out = ""
                    if (Array.isArray(row.leaderboard.__methods) && row.leaderboard.__methods.includes("PATCH")) {
                        out += `
                            <a href="<%= url_for("leaderboard.edit", {leaderboard_id = "${row.id}"}) %>" class="table-icon table-icon-s orange orange-h" title="Edit leaderboard">
                                <i class="fas fa-pen"></i>
                            </a>
                        `
                    }
                    return out + `
                        <a href="#!" class="table-icon teal teal-h" title="Add to community" data-bs-toggle="modal" data-bs-target="#add-leaderboard-modal">
                            <i class="fas fa-sign-in-alt"></i>
                        </a>
                    `
                }
            },
        ]
    })
    var dtBestScores
    var dtAllScores
    dtBestScores = dtInit(document.querySelector("#user-best-scores-table"), {
        ...dtAllOptions,
        serverSide: true,
        ajax: {
            url: "/dt/users/<%= params.user_id %>/scores",
            type: "POST",
            data(d) {
                d.notechart = true
                d.modifierset = true
                d.leaderboard_id = parseInt($("#best-scores-leaderboard").val())
                d.difftable_id = parseInt($("#best-scores-difftable").val())
                d.methods = true
            }
        },
        columns: [
            {render(d, t, row) {return '#' + row.rank}},
            {render(d, t, row) {return row.notechart.song_title}},
            {render(d, t, row) {return notechartLink(row.notechart)}},
            {render(d, t, row) {return row.notechart.level}},
            {render(d, t, row) {return formatScore(row.rating, 1, 2)}},
            {render(d, t, row) {return formatScore(row.accuracy, 1000, 2)}},
            {render(d, t, row) {return row.misses_count}},
            {render(d, t, row) {return row.inputmode}},
            {render(d, t, row) {return row.modifierset.displayed}},
            {render(d, t, row) {return formatDate(row.created_at)}},
            {
                className: 'table-icon-cell',
                render(data, type, row, meta) {
                    var out = ""
                    if (Array.isArray(row.__methods) && row.__methods.includes("DELETE")) {
                        out += `
                            <a href="#!" class="table-icon table-icon-l table-icon-hide red red-h" title="Delete score" data-bs-toggle="modal" data-bs-target="#delete-score-modal" @click="selected_score_id = ${row.id}">
                                <i class="fas fa-times"></i>
                            </a>
                        `
                    }
                    return out + `
                        <a href="#!" class="table-icon table-icon-hide blue blue-h" title="Download replay">
                            <i class="fas fa-download"></i>
                        </a>
                    `
                }
            },
        ]
    })
    dtAllScores = dtInit(document.querySelector("#user-all-scores-table"), {
        ...dtAllOptions,
        serverSide: true,
        ajax: {
            url: "/dt/users/<%= params.user_id %>/scores",
            type: "POST",
            data(d) {
                d.latest = true
                d.notechart = true
                d.modifierset = true
                d.leaderboard_id = parseInt($("#all-scores-leaderboard").val())
                d.difftable_id = parseInt($("#all-scores-difftable").val())
                d.methods = true
            }
        },
        columns: [
            {render(d, t, row) {return row.notechart.song_title}},
            {render(d, t, row) {return notechartLink(row.notechart)}},
            {render(d, t, row) {return row.notechart.level}},
            {render(d, t, row) {return formatScore(row.rating, 1, 2)}},
            {render(d, t, row) {return formatScore(row.accuracy, 1000, 2)}},
            {render(d, t, row) {return row.misses_count}},
            {render(d, t, row) {return row.inputmode}},
            {render(d, t, row) {return row.modifierset.displayed}},
            {render(d, t, row) {return formatDate(row.created_at)}},
            {
                className: 'table-icon-cell',
                render(data, type, row, meta) {
                    var out = ""
                    if (Array.isArray(row.__methods) && row.__methods.includes("DELETE")) {
                        out += `
                            <a href="#!" class="table-icon table-icon-l table-icon-hide red red-h" title="Delete score" data-bs-toggle="modal" data-bs-target="#delete-score-modal" @click="selected_score_id = ${row.id}">
                                <i class="fas fa-times"></i>
                            </a>
                        `
                    }
                    return out + `
                        <a href="#!" class="table-icon table-icon-hide blue blue-h" title="Download replay">
                            <i class="fas fa-download"></i>
                        </a>
                    `
                }
            },
        ]
    })
    obj.dtBestScores = dtBestScores
    obj.dtAllScores = dtAllScores
}
</script>
