<script>
function community() {return {
    community: {},
    community_leaderboards: [],
    methods: [],
    user_methods: [],
    pending_count: 0,
    selected_leaderboard_id: 0,
    selected_user_id: 0,
    user_id: null,
    async get() {
		let response = await _get('<%= api_url %>/communities/<%= params.community_id %>', {
            methods: true,
            users: false, inputmodes: true, leaderboards: false, difftables: false,
        })
        if (!response.ok) return
		let response_json = await response.json()
		this.community = response_json.community
		this.methods = response_json.__methods

		response = await _get('<%= api_url %>/communities/<%= params.community_id %>/users', {
            no_data: true,
            invitations: true,
            requests: true,
        })
        if (!response.ok) return
		this.pending_count = (await response.json()).filtered

		response = await _get('<%= api_url %>/communities/<%= params.community_id %>/leaderboards', {
            no_data: true,
            incoming: true,
            outgoing: true,
        })
        if (!response.ok) return
		this.pending_count = this.pending_count + (await response.json()).filtered

		response = await _get('<%= api_url %>/communities/<%= params.community_id %>/leaderboards', {
            leaderboard: true,
        })
        if (!response.ok) return
		this.community_leaderboards = (await response.json()).community_leaderboards

        dtInitCommunity(this)
    },
    async getLeave() {
        var user_id = <%= session.user_id or "null" %>
        if (!user_id) return
		let response = await _get(`<%= access_url %>/communities/<%= params.community_id %>/users/${user_id}`)
        if (!response.ok) return
		this.user_methods = (await response.json()).__methods
    },
    async addToCommunity(community_id, message) {
		await _put(`<%= api_url %>/communities/${community_id}/leaderboards/${this.selected_leaderboard_id}`, {
            message: message,
        })
    },
    async kickSelectedUser() {
		await _delete(`<%= api_url %>/communities/<%= params.community_id %>/users/${this.selected_user_id}`)
        this.dtUsersTable.ajax.reload()
    },
    yourRow() {
        if (this.user_id) {
            this.user_id = null
        } else {
            this.user_id = <%= session.user_id or "null" %>
        }
        this.dtUsersTable.ajax.reload()
    },
}}
</script>


<div id="community" x-data="community" x-init="get(); getLeave();" x-show="community.id" x-cloak>
    <% render("views.components.modals.properties") %>


    <nav id="secondary-navbar">
        <div class="container-lg">
            <div class="nav">
                <a class="nav-link" href="#info-section">Info</a>
                <a class="nav-link" href="#description-section">Description</a>
                <a class="nav-link" href="#leaderboards-section">Leaderboards</a>
                <a class="nav-link" href="#members-section">Members</a>
            </div>
        </div>
    </nav>
    <div id="secondary-navbar-box"></div>


    <div class="banner" :style="`background-image: url(${renderBlurhashBanner(community.banner)})`"></div>


    <main class="container-lg">
        <div id="main-box">
            <% render("views.components.modals.delete", {
                id = "kick-user-modal",
                delete = "kickSelectedUser",
            }) %>
            <% render("views.components.modals.add-leaderboard") %>
            <nav class="page-icons page-icons-right page-icons-always-collapsed">
                <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#page-icons-right">
                    <i class="fas fa-ellipsis-v"></i>
                </button>

                <div class="collapse navbar-collapse" id="page-icons-right">
                    <div class="navbar-nav">
                        <a x-show="user_methods.includes('DELETE')" href="#!" class="page-icon" title="Leave community" data-bs-toggle="modal" data-bs-target="#delete-modal">
                            <span class="page-icon-text">Leave</span>
                            <div class="page-icon-box">
                                <i class="fas fa-sign-out-alt"></i>
                            </div>
                        </a>

                        <a x-show="methods.includes('PATCH')" href="<%= url_for("community.inbox", params) %>" class="page-icon" title="Accept requests and send invites">
                            <span class="page-icon-text">Inbox</span>
                            <div class="page-icon-box">
                                <i class="fas fa-inbox"></i>
                                <template x-if="pending_count > 0">
                                    <div class="new-message-circle" x-text="pending_count"></div>
                                </template>
                            </div>
                        </a>

                        <a x-show="methods.includes('PATCH')" href="<%= url_for("community.changes", params) %>" class="page-icon" title="All community changes and who made them">
                            <span class="page-icon-text">Changes</span>
                            <div class="page-icon-box">
                                <i class="fas fa-list-alt"></i>
                            </div>
                        </a>

                        <a x-show="methods.includes('PATCH')" href="<%= url_for("community.edit", params) %>" class="page-icon" title="Community settings">
                            <span class="page-icon-text">Settings</span>
                            <div class="page-icon-box">
                                <i class="fas fa-cog"></i>
                            </div>
                        </a>
                    </div>
                </div>
            </nav>

            <h1><span x-text="community.alias"></span> - <span x-text="community.name"></span></h1>


            <section id="info-section">
                <h2>Info</h2>

                <table class="meta-table">
                    <tr>
                        <th title="Member count">Members:</th>
                        <td x-text="community.users_count"></td>
                        <th title="Input modes in community leaderboards">Modes:</th>
                        <td x-text="inputmodesToString(community.community_inputmodes)"></td>
                    </tr>
                    <tr>
                        <th title="To join private communities, you have to send a request">Public:</th>
                        <td x-text="community.is_public ? 'Yes' : 'No'"></td>
                        <th title="A link to the community outside of this site">External link:</th>
                        <td><a :href="community.link" x-text="community.link"></a></td>
                    </tr>
                </table>
            </section>


            <section id="description-section">
                <h2>Description</h2>

                <p x-text="community.description"></p>
            </section>


            <section id="leaderboards-section">
                <h2>
                    Leaderboards
                    <a href="<%= url_for("leaderboards.create", params) %>" class="title-icon h2-icon teal teal-h" title="Create leaderboard">
                        <i class="fas fa-plus"></i>
                    </a>
                </h2>

                <table id="community-leaderboards-table" class="data-table table table-icon-col-first table-icon-col-last" data-orders="0a 1a">
                    <thead>
                        <tr>
                            <th class="table-icon-th"></th>
                            <th title="Leaderboard name">Name</th>
                            <th title="Leaderboard input modes">Modes</th>
                            <th title="Player on rank 1">Top player</th>
                            <th title="Player count">Players</th>
                            <th title="Table count">Tables</th>
                            <th class="table-icon-th"></th>
                        </tr>
                    </thead>
                </table>
            </section>


            <section id="members-section">
                <h2>Members</h2>

                <div id="members-insert-top" hidden>
                    <div class="col">
                        <form class="table-form table-form-top">
                            <select class="form-select form-select-sm" id="members-leaderboard" name="leaderboard" title="Leaderboard used for member ranks and plays">
                                <option value="">No leaderboard</option>
                                <template x-for="community_leaderboard in community_leaderboards">
                                    <option :value="community_leaderboard.leaderboard_id" x-text="community_leaderboard.leaderboard.name"></option>
                                </template>
                            </select>
                        </form>
                    </div>

                    <div class="col">
                        <form class="table-form table-form-top">
                            <div class="form-check form-switch">
                                <label for="only-show-admins" class="form-check-label" title="Only show rows of moderators, admins and the owner">
                                    <input type="checkbox" class="form-check-input" id="members-only-show-admins" name="only-show-admins">
                                    Admins only
                                </label>
                            </div>
                        </form>
                    </div>
                </div>

                <div id="members-insert-bottom" hidden>
                    <div class="col">
                        <form class="table-form table-form-bottom" action="javascript:void(0);">
                            <button type="submit" class="btn bg-blue bg-blue-h" @click="yourRow">Your row</button>
                        </form>
                    </div>
                </div>

                <table id="community-users-table" class="data-table table table-icon-col-last" data-insert-top="members-insert-top" data-insert-bottom="members-insert-bottom">
                    <thead>
                        <tr>
                            <th class="table-col-minwidth" title="Rank of the selected leaderboard">Rank</th>
                            <th class="table-icon-th"></th>
                            <th title="Player name">Name</th>
                            <th title="The player's leaderboard performance rating">PR</th>
                            <th title="Favourite modes">Fav modes</th>
                            <th title="Plays on the selected leaderboard">Plays</th>
                            <th title="Last submitted score">Last played</th>
                            <th class="table-icon-th"></th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <th title="Rank of the selected leaderboard">Rank</th>
                            <th class="table-icon-th"></th>
                            <th title="Player name">Name</th>
                            <th title="The player's leaderboard performance rating">PR</th>
                            <th title="Favourite modes">Fav modes</th>
                            <th title="Plays on the selected leaderboard">Plays</th>
                            <th title="Last submitted score">Last played</th>
                            <th class="table-icon-th"></th>
                        </tr>
                    </tfoot>
                </table>
            </section>
        </div>
    </main>
</div>


<script>
function dtInitCommunity(obj) {
    dtInit(document.querySelector("#community-leaderboards-table"), {
        ...dtColOptions,
        serverSide: true,
        ajax: {
            url: "/dt/communities/<%= params.community_id %>/leaderboards",
            type: "POST",
            data(d) {
                d.leaderboard = true
                d.leaderboard_inputmodes = true
                d.leaderboard_top_user = true
                d.methods = true
            }
        },
        columns: [
            {
                render(data, type, row, meta) {
                    if (row.community_id == row.leaderboard.owner_community_id) {
                        return `
                            <td class="table-icon-cell">
                                <span class="table-icon table-icon-s orange" title="This community owns this leaderboard">
                                    <i class="fas fa-crown"></i>
                                </span>
                            </td>
                        `
                    }
                    return ''
                }
            },
            {render(d, t, row) {return leaderboardLink(row.leaderboard)}},
            {render(d, t, row) {return inputmodesToString(row.leaderboard.leaderboard_inputmodes)}},
            {render(d, t, row) {return userLink(row.leaderboard.top_user)}},
            {render(d, t, row) {return row.leaderboard.users_count}},
            {render(d, t, row) {return row.leaderboard.difftables_count}},
            {
                className: 'table-icon-row',
                render(data, type, row, meta) {
                    var out = ''
                    if (Array.isArray(row.leaderboard.__methods) && row.leaderboard.__methods.includes("PATCH")) {
                        out = out + `
                            <a href="<%= url_for("leaderboard.edit", {leaderboard_id = "${row.id}"}) %>" class="table-icon table-icon-s orange orange-h" title="Edit leaderboard">
                                <i class="fas fa-pen"></i>
                            </a>
                        `
                    }
                    return out + `
                        <a href="#!" class="table-icon teal teal-h" title="Add to community" data-bs-toggle="modal" data-bs-target="#add-leaderboard-modal" @click="selected_leaderboard_id=${row.id}">
                            <i class="fas fa-sign-in-alt"></i>
                        </a>
                    `;
                }
            },
        ]
    })
    var dtUsersTable
    dtUsersTable = dtInit(document.querySelector("#community-users-table"), {
        ...dtAllOptions,
        serverSide: true,
        ajax: {
            url: "/dt/communities/<%= params.community_id %>/users",
            type: "POST",
            data(d) {
                d.staff = $("#members-only-show-admins").is(':checked') ? true : false
                d.user = true
                d.user_inputmodes = true
                d.leaderboard_id = parseInt($("#members-leaderboard").val())
                d.user_id = obj.user_id
                d.methods = true
            }
        },
        initComplete(settings, json) {
            $("#members-only-show-admins").change(() => {
                dtUsersTable.ajax.reload(null, false)
            })
            $("#members-leaderboard").change(() => {
                dtUsersTable.ajax.reload(null, false)
            })
            dtUsersTable.ajax.reload(null, false)
        },
        columns: [
            {render(d, t, row) {return '#' + row.rank}},
            {
                className: 'table-icon-cell',
                render(data, type, row, meta) {
                    if (row.role == "creator") {
                        return `
                            <span class="table-icon table-icon-s orange" title="Community owner">
                                <i class="fas fa-crown"></i>
                            </span>
                        `
                    } else if (row.role == "admin") {
                        return `
                            <span class="table-icon table-icon-s orange" title="Community admin">
                                <i class="fas fa-user-shield"></i>
                            </span>
                        `
                    } else if (row.role == "moderator") {
                        return `
                            <span class="table-icon table-icon-s yellow" title="Community moderator">
                                <i class="fas fa-user-shield"></i>
                            </span>
                        `
                    }
                    return ""
                }
            },
            {render(d, t, row) {return userLink(row.user)}},
            {render(d, t, row) {return formatScore(row.total_rating || 0, 1, 2)}},
            {render(d, t, row) {return inputmodesToString(row.user.user_inputmodes)}},
            {render(d, t, row) {return row.scores_count || row.user.scores_count}},
            {render(d, t, row) {
                if (row.latest_score_submitted_at) return formatDate(row.latest_score_submitted_at)
                if (row.user.latest_score_submitted_at) return formatDate(row.user.latest_score_submitted_at)
                return ""
            }},
            {
                render(data, type, row, meta) {
                    if (Array.isArray(row.__methods) && row.__methods.includes("DELETE")) {
                        return `
                        <td class="table-icon-cell">
                            <a href="#!" class="table-icon table-icon-l table-icon-hide red red-h" title="Kick member" data-bs-toggle="modal" data-bs-target="#kick-user-modal" @click="selected_user_id = ${row.user_id}">
                                <i class="fas fa-times"></i>
                            </a>
                        </td>
                        `
                    }
                    return ""
                }
            },
        ]
    })
    obj.dtUsersTable = dtUsersTable
}
</script>
